-- TETRIS, David PHAM-VAN
local function a(self)local b={prototype={}}b.prototype.__index=b.prototype;b.prototype.constructor=b;return b end;local function c(d,...)local e=setmetatable({},d.prototype)e:____constructor(...)return e end;local function f(d,g)d.____super=g;local h=setmetatable({__index=g},g)setmetatable(d,h)local i=getmetatable(g)if i then if type(i.__index)=="function"then h.__index=i.__index end;if type(i.__newindex)=="function"then h.__newindex=i.__newindex end end;setmetatable(d.prototype,g.prototype)if type(g.prototype.__index)=="function"then d.prototype.__index=g.prototype.__index end;if type(g.prototype.__newindex)=="function"then d.prototype.__newindex=g.prototype.__newindex end;if type(g.prototype.__tostring)=="function"then d.prototype.__tostring=g.prototype.__tostring end end;local function j(self,k,l)for m=1,#self do k(l,self[m],m-1,self)end end;local n={}local o;local p=a()p.name="Point"function p.prototype.____constructor(self,q,r)self.x=q;self.y=r end;local s=a()s.name="Shape"function s.prototype.____constructor(self)self.rotation=0 end;function s.prototype.move(self,q,r)local t={}do local m=0;while m<#self.points do t[#t+1]=c(p,self.points[m+1].x+q,self.points[m+1].y+r)m=m+1 end end;return t end;function s.prototype.setPos(self,t)self.points=t end;function s.prototype.drop(self)return self:move(0,1)end;function s.prototype.moveLeft(self)return self:move(-1,0)end;function s.prototype.moveRight(self)return self:move(1,0)end;local u=a()u.name="SquareShape"f(u,s)function u.prototype.____constructor(self,v)s.prototype.____constructor(self)self.fillColor=lcd.RGB(0,255,0)local q=v/2;local r=-2;self.points={}local w=self.points;w[#w+1]=c(p,q,r)local x=self.points;x[#x+1]=c(p,q+1,r)local y=self.points;y[#y+1]=c(p,q,r+1)local z=self.points;z[#z+1]=c(p,q+1,r+1)end;function u.prototype.rotate(self,A)return self.points end;local B=a()B.name="LShape"f(B,s)function B.prototype.____constructor(self,C,v)s.prototype.____constructor(self)self.leftHanded=C;if C then self.fillColor=lcd.RGB(0,128,0)else self.fillColor=lcd.RGB(128,255,128)end;local q=v/2;local r=-2;self.points={}local D=self.points;D[#D+1]=c(p,q,r-1)local E=self.points;E[#E+1]=c(p,q,r)local F=self.points;F[#F+1]=c(p,q,r+1)local G=self.points;G[#G+1]=c(p,q+(C and-1 or 1),r+1)end;function B.prototype.rotate(self,A)self.rotation=(self.rotation+(A and 1 or-1))%4;local t={}repeat local H=self.rotation;local I=H==0;if I then t[#t+1]=c(p,self.points[2].x,self.points[2].y-1)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y+1)t[#t+1]=c(p,self.points[2].x+(self.leftHanded and-1 or 1),self.points[2].y+1)break end;I=I or H==1;if I then t[#t+1]=c(p,self.points[2].x+1,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x-1,self.points[2].y)t[#t+1]=c(p,self.points[2].x-1,self.points[2].y+(self.leftHanded and-1 or 1))break end;I=I or H==2;if I then t[#t+1]=c(p,self.points[2].x,self.points[2].y+1)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y-1)t[#t+1]=c(p,self.points[2].x+(self.leftHanded and 1 or-1),self.points[2].y-1)break end;I=I or H==3;if I then t[#t+1]=c(p,self.points[2].x-1,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x+1,self.points[2].y)t[#t+1]=c(p,self.points[2].x+1,self.points[2].y+(self.leftHanded and 1 or-1))break end until true;return t end;local J=a()J.name="StepShape"f(J,s)function J.prototype.____constructor(self,C,v)s.prototype.____constructor(self)if C then self.fillColor=lcd.RGB(0,255,255)else self.fillColor=lcd.RGB(255,255,0)end;self.leftHanded=C;local q=v/2;local r=-1;self.points={}local K=self.points;K[#K+1]=c(p,q+(C and 1 or-1),r)local L=self.points;L[#L+1]=c(p,q,r)local M=self.points;M[#M+1]=c(p,q,r-1)local N=self.points;N[#N+1]=c(p,q+(C and-1 or 1),r-1)end;function J.prototype.rotate(self,A)self.rotation=(self.rotation+(A and 1 or-1))%2;local t={}repeat local O=self.rotation;local P=O==0;if P then t[#t+1]=c(p,self.points[2].x+(self.leftHanded and 1 or-1),self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y-1)t[#t+1]=c(p,self.points[2].x+(self.leftHanded and-1 or 1),self.points[2].y-1)break end;P=P or O==1;if P then t[#t+1]=c(p,self.points[2].x,self.points[2].y+(self.leftHanded and 1 or-1))t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x+1,self.points[2].y)t[#t+1]=c(p,self.points[2].x+1,self.points[2].y+(self.leftHanded and-1 or 1))break end until true;return t end;local Q=a()Q.name="StraightShape"f(Q,s)function Q.prototype.____constructor(self,v)s.prototype.____constructor(self)self.fillColor=lcd.RGB(0,0,255)local q=v/2;local r=-2;self.points={}local R=self.points;R[#R+1]=c(p,q,r-2)local S=self.points;S[#S+1]=c(p,q,r-1)local T=self.points;T[#T+1]=c(p,q,r)local U=self.points;U[#U+1]=c(p,q,r+1)end;function Q.prototype.rotate(self,A)self.rotation=(self.rotation+(A and 1 or-1))%2;local t={}repeat local V=self.rotation;local W=V==0;if W then t[1]=c(p,self.points[3].x,self.points[3].y-2)t[2]=c(p,self.points[3].x,self.points[3].y-1)t[3]=c(p,self.points[3].x,self.points[3].y)t[4]=c(p,self.points[3].x,self.points[3].y+1)break end;W=W or V==1;if W then t[1]=c(p,self.points[3].x+2,self.points[3].y)t[2]=c(p,self.points[3].x+1,self.points[3].y)t[3]=c(p,self.points[3].x,self.points[3].y)t[4]=c(p,self.points[3].x-1,self.points[3].y)break end until true;return t end;local X=a()X.name="TShape"f(X,s)function X.prototype.____constructor(self,v)s.prototype.____constructor(self)self.fillColor=lcd.RGB(255,0,0)self.points={}local q=v/2;local r=-2;local Y=self.points;Y[#Y+1]=c(p,q-1,r)local Z=self.points;Z[#Z+1]=c(p,q,r)local _=self.points;_[#_+1]=c(p,q+1,r)local a0=self.points;a0[#a0+1]=c(p,q,r+1)end;function X.prototype.rotate(self,A)self.rotation=(self.rotation+(A and 1 or-1))%4;local t={}repeat local a1=self.rotation;local a2=a1==0;if a2 then t[#t+1]=c(p,self.points[2].x-1,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x+1,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y+1)break end;a2=a2 or a1==1;if a2 then t[#t+1]=c(p,self.points[2].x,self.points[2].y-1)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y+1)t[#t+1]=c(p,self.points[2].x-1,self.points[2].y)break end;a2=a2 or a1==2;if a2 then t[#t+1]=c(p,self.points[2].x+1,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x-1,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y-1)break end;a2=a2 or a1==3;if a2 then t[#t+1]=c(p,self.points[2].x,self.points[2].y+1)t[#t+1]=c(p,self.points[2].x,self.points[2].y)t[#t+1]=c(p,self.points[2].x,self.points[2].y-1)t[#t+1]=c(p,self.points[2].x+1,self.points[2].y)break end until true;return t end;local a3=a()a3.name="Grid"function a3.prototype.____constructor(self,a4,v,a5,a6,a7)local a8=0;a8=a7/a4;self.blockSize=a8;self.backColor=a5;self.cols=v;self.rows=a4;self.blockColor={}do local a9=0;while a9<a4 do local aa={}do local b=0;while b<v do aa[#aa+1]=0;b=b+1 end end;local ab=self.blockColor;ab[#ab+1]=aa;a9=a9+1 end end;self.xOffset=a6/2-a8*v/2;self.yOffset=a7/2-a8*a4/2 end;function a3.prototype.draw(self,ac)self:paintShape(ac,ac.fillColor)end;function a3.prototype.erase(self,ac)self:paintShape(ac,self.backColor)end;function a3.prototype.paintShape(self,ac,ad)j(ac.points,function(ae,af)return self:paintSquare(af.y,af.x,ad)end)end;function a3.prototype.getPreferredSize(self)return c(p,self.blockSize*self.cols,self.blockSize*self.rows)end;function a3.prototype.isPosValid(self,ag)local ah=true;do local m=0;while m<#ag do if ag[m+1].x<0 or ag[m+1].x>=self.cols or ag[m+1].y>=self.rows then ah=false;break end;if ag[m+1].y>=0 then if self.blockColor[ag[m+1].y+1][ag[m+1].x+1]~=self.backColor then ah=false;break end end;m=m+1 end end;return ah end;function a3.prototype.addShape(self,ac)do local m=0;while m<#ac.points do if ac.points[m+1].y<0 then return false end;self.blockColor[ac.points[m+1].y+1][ac.points[m+1].x+1]=ac.fillColor;m=m+1 end end;return true end;function a3.prototype.eraseGrid(self)local ai=self.cols*self.blockSize;local aj=self.rows*self.blockSize;lcd.drawFilledRectangle(self.xOffset,self.yOffset,ai,aj,self.backColor)end;function a3.prototype.clearGrid(self)do local ak=0;while ak<self.rows do do local aa=0;while aa<self.cols do self.blockColor[ak+1][aa+1]=self.backColor;aa=aa+1 end end;ak=ak+1 end end end;function a3.prototype.paintSquare(self,ak,aa,ad)if ak>=0 then lcd.drawFilledRectangle(self.xOffset+aa*self.blockSize,self.yOffset+ak*self.blockSize,self.blockSize-1,self.blockSize-1,ad)end end;function a3.prototype.drawGrid(self)do local ak=0;while ak<self.rows do do local aa=0;while aa<self.cols do if self.blockColor[ak+1][aa+1]~=self.backColor then self:paintSquare(ak,aa,self.blockColor[ak+1][aa+1])end;aa=aa+1 end end;ak=ak+1 end end end;function a3.prototype.paint(self)self:eraseGrid()self:drawGrid()end;function a3.prototype.checkRows(self,al)local am=al.points[1].y;local an=al.points[1].y;local ao;local ap=0;do local m=1;while m<#al.points do if al.points[m+1].y<am then am=al.points[m+1].y end;if al.points[m+1].y>an then an=al.points[m+1].y end;m=m+1 end end;if am<0 then am=0 end;while an>=am do ao=true;do local aa=0;while aa<self.cols do if self.blockColor[an+1][aa+1]==self.backColor then ao=false;break end;aa=aa+1 end end;if ao then ap=ap+1;do local a9=an;while a9>=0 do do local aa=0;while aa<self.cols do if a9>0 then self.blockColor[a9+1][aa+1]=self.blockColor[a9][aa+1]else self.blockColor[a9+1][aa+1]=self.backColor end;aa=aa+1 end end;a9=a9-1 end end;am=am+1 else an=an-1 end end;return ap end;local aq=a()aq.name="Message"function aq.prototype.____constructor(self,o)self.margin=20;self.game=o end;function aq.prototype.setMessage(self,ar)self.messageLabel=ar end;function aq.prototype.clearMessage(self)self.messageLabel=nil end;function aq.prototype.draw(self)if self.messageLabel==nil then return end;lcd.drawFilledRectangle(self.margin,self.margin,o.w-self.margin*2,o.h-self.margin*2,COLOR_THEME_SECONDARY1,1)lcd.drawRectangle(self.margin,self.margin,o.w-self.margin*2,o.h-self.margin*2,COLOR_THEME_PRIMARY1,2)lcd.drawText(o.w/2,o.h/2,self.messageLabel,bit32.bor(bit32.bor(bit32.bor(COLOR_THEME_PRIMARY1,CENTER),VCENTER),DBLSIZE))end;local as=a()as.name="Game"function as.prototype.____constructor(self,a6,a7)self.level=-1;self.rowsCompleted=0;self.phase=as.gameState.initial;self.score=0;self.timerToken=0;self.w=a6;self.h=a7;self.message=c(aq,self)self.grid=c(a3,16,10,lcd.RGB(128,128,128),a6,a7)self.speed=1000;self.message:setMessage("TETRIS\nPress SYS to start")self.timerToken=getTime()end;function as.prototype.draw(self)lcd.clear(COLOR_THEME_PRIMARY2)self.grid:paint()if self.phase==as.gameState.playing then self.grid:draw(self.currentShape)end;if self.scoreLabel~=nil then lcd.drawText(10,10,"Score: "..self.scoreLabel,bit32.bor(SMLSIZE,COLOR_THEME_PRIMARY1))end;if self.levelLabel~=nil then lcd.drawText(10,23,"Level: "..self.levelLabel,bit32.bor(SMLSIZE,COLOR_THEME_PRIMARY1))end;if self.rowsLabel~=nil then lcd.drawText(10,36,"Rows: "..self.rowsLabel,bit32.bor(SMLSIZE,COLOR_THEME_PRIMARY1))end;self.message:draw()end;function as.prototype.newGame(self)self.message:clearMessage()self.grid:clearGrid()self.currentShape=self:newShape()self.score=0;self.rowsCompleted=0;self.score=0;self.level=-1;self.speed=1000;self.phase=as.gameState.playing;self:incrementLevel()end;function as.prototype.updateLabels(self)self.scoreLabel=tostring(self.score)self.rowsLabel=tostring(self.rowsCompleted)self.levelLabel=tostring(self.level)end;function as.prototype.gameTimer(self)if self.phase==as.gameState.playing then local ag=self.currentShape:drop()if self.grid:isPosValid(ag)then self.currentShape:setPos(ag)else self:shapeFinished()end end end;function as.prototype.keyHandler(self,at)local ag;if self.phase==as.gameState.playing then repeat local au=at;local av=au==1541;if av then ag=self.currentShape:moveRight()break end;av=av or au==1542;if av then ag=self.currentShape:moveLeft()break end;av=av or au==1539;if av then ag=self.currentShape:rotate(true)break end;av=av or au==516;if av then ag=self.currentShape:drop()while self.grid:isPosValid(ag)do self.currentShape:setPos(ag)ag=self.currentShape:drop()end;self:shapeFinished()break end until true;repeat local aw=at;local ax=aw==EVT_ROT_RIGHT or aw==EVT_ROT_LEFT or aw==EVT_TELEM_FIRST;if ax then if self.grid:isPosValid(ag)then self.currentShape:setPos(ag)end;break end until true end;if at==EVT_SYS_BREAK then self:newGame()elseif at==EVT_MODEL_FIRST then self:togglePause()end end;function as.prototype.togglePause(self)if self.phase==as.gameState.paused then self.message:clearMessage()self.phase=as.gameState.playing;self:draw()elseif self.phase==as.gameState.playing then self.phase=as.gameState.paused;self:showMessage("PAUSED")end end;function as.prototype.showMessage(self,ar)self.message:setMessage(ar)end;function as.prototype.incrementLevel(self)self.level=self.level+1;if self.level<10 then self.speed=1000-self.level*100 end;self:updateLabels()end;function as.prototype.shapeFinished(self)if self.grid:addShape(self.currentShape)then self.grid:draw(self.currentShape)local ay=self.grid:checkRows(self.currentShape)self.rowsCompleted=self.rowsCompleted+ay;self.score=self.score+ay*(self.level+1)*10;if self.rowsCompleted>(self.level+1)*10 then self:incrementLevel()end;self:updateLabels()self.currentShape=self:newShape()else self.phase=as.gameState.gameOver;self:showMessage("GAME OVER\nPress SYS to Restart")end end;function as.prototype.newShape(self)local az=math.floor(math.random()*7)local aA;repeat local aB=az;local aC=aB==0;if aC then aA=c(B,false,self.grid.cols)break end;aC=aC or aB==1;if aC then aA=c(B,true,self.grid.cols)break end;aC=aC or aB==2;if aC then aA=c(X,self.grid.cols)break end;aC=aC or aB==3;if aC then aA=c(J,false,self.grid.cols)break end;aC=aC or aB==4;if aC then aA=c(J,true,self.grid.cols)break end;aC=aC or aB==5;if aC then aA=c(u,self.grid.cols)break end;aC=aC or aB==6;if aC then aA=c(Q,self.grid.cols)break end until true;return aA end;function as.prototype.run(self,at,aD)local aE=getTime()if(aE-self.timerToken)*10>=self.speed then self:gameTimer()self.timerToken=aE end;self:draw()self:keyHandler(at)return 0 end;as.gameState={initial=0,playing=1,paused=2,gameOver=3}local function aF(a6,a7)if a6==nil then a6=LCD_W end;if a7==nil then a7=LCD_H end;o=c(as,a6,a7)end;local function aG(at,aD)return o:run(at,aD)end;n.init=aF;n.run=aG;return n
